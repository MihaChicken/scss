$include-table-css: true !default;
$table-border-color: $silver !default;
$table-header-background-color: $white !default;
$table-header-color: $asphalt !default;
$table-header-border-color: $primary-color !default;
$table-header-row-border-bottom-color: $athens-gray !default;
$table-header-row-border-top-color: $catkin !default;
$table-body-color: $shark !default;
$table-row-background-color: $white !default;
$table-row-hover-background-color: $silver !default;
$table-row-active-background-color: $arctica !default;
$table-row-border-color: $silver !default;
$table-row-line-height: $space-xxl !default;

// Can we refactor this one, with clear direct class names instead of much depth.
// As stylelint throws an error on different levels, e.g. too much depth in scss or more then 3 compound selectors
// Maybe it is not possible (optional)

/* stylelint-disable selector-max-compound-selectors, max-nesting-depth */
@mixin table-sort() {
  position: relative;
  width: rem(10px);
  display: inline-block;
  vertical-align: top;

  .sort-arrow {
    visibility: hidden;
    transition: transform 0.2s linear;
    vertical-align: baseline;
  }

  &.asc .sort-arrow {
    visibility: visible;
    transform: rotate(180deg);
  }

  &.desc .sort-arrow {
    visibility: visible;
    transform: rotate(0deg);
  }
}

@mixin table-filter() {
  display: inline-block;
  vertical-align: top;
  text-transform: initial;

  .dropdown-trigger,
  .flatpickr-input {
    color: inherit;
  }

  &.is-active .dropdown-trigger,
  &.is-active .flatpickr-input {
    color: $primary-color;
  }
}

@if $include-table-css {
  .table-actions {
    margin: rem(20px 0 11px);
  }

  .table {
    width: 100%;
    border: 1px solid $table-border-color;
    border-radius: 2px;
    border-collapse: collapse;
    line-height: $table-row-line-height;
    box-shadow: $paper-shadow-2;

    &.mod-flat {
      box-shadow: none;
      border-color: transparent;
    }

    thead {
      background-color: $table-header-background-color;
      color: $table-header-color;

      tr {
        th {
          padding: 0 $space-m;
          line-height: $space-xl;
          white-space: nowrap;
          position: relative;
          text-align: left;
          border-bottom: 1px solid $table-header-border-color;

          label {
            display: inline-block;
            vertical-align: top;
            margin: 0;
            overflow: visible;

            > .text {
              display: inline-block;
              vertical-align: top;
              max-width: 90%;
              overflow: hidden;
              text-overflow: ellipsis;
            }

            > .filter {
              @include table-filter();
            }

            > .sort {
              @include table-sort();
            }
          }
        }

        th:first-child {
          border-top-left-radius: 2px;
        }

        th:last-child {
          border-top-right-radius: 2px;
        }
      }

      tr:not(:first-child) {
        th {
          padding: rem(5px 4px);
        }
      }
    }

    tbody {
      color: $asphalt;
      font-size: rem(15px);

      tr {
        td {
          background-color: $table-row-background-color;
          border-bottom: 1px solid $table-row-border-color;
          padding: 0 $space-m;
          line-height: $table-row-line-height;
          transition: background-color 0.1s linear;
        }

        &:hover td {
          background-color: $table-row-hover-background-color;
        }

        &.is-active td {
          background-color: $table-row-active-background-color;
        }
      }

      tr.empty-row td,
      tr.loader-row td {
        text-align: center;
        background-color: $table-row-background-color;
      }

      tr.pagination-row td {
        padding: $space-m;
        background-color: $table-row-background-color;
      }
    }

    .number-column {
      text-align: right;
    }
  }
}
/* stylelint-enable */
