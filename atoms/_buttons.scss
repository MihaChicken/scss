$export-button-css: true !default;

$button-color: $white !default;
$button-color-disabled: $arctica !default;
$button-background: $heaven !default;
$button-background-disabled: $sail !default;
$button-shadow-color: $miroschka !default;
$button-border-radius: $base-border-radius !default;
$button-padding: 0.5em 1em !default;
$button-sizes: (
  small: $font-size-small,
  medium: $base-font-size,
  large: $font-size-large
) !default;
$button-shadows: (
  normal: $paper-shadow-2,
  hover: $paper-shadow-3,
  active: none,
  disabled: none
) !default;

/**
 * Includes css for the general button styling
 */
@mixin button-base() {
  font-family: $base-font-family;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  text-transform: uppercase;
  text-decoration: none;
  text-align: center;
  line-height: 1rem;
  user-select: none;
  border: 1px solid transparent;
  border-radius: $button-border-radius;
  padding: $button-padding;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  white-space: nowrap;
  outline: none;
  @include appearance(none);
  @include transition(all .2s);
}

/**
 * Includes colors and shadows for buttons
 * @param color $background
 * @param color $foreground
 */
@mixin button-style($background, $foreground) {
  background-color: $background;
  color: $foreground;
  box-shadow: map-get($button-shadows, normal);
  &:hover,
  &.is-hovered {
    box-shadow: map-get($button-shadows, hover);
  }
  &:active,
  &.is-active {
    background-color: darken($background, 2%);
    box-shadow: map-get($button-shadows, active);
  }
}

/**
 * Includes css to make a button small
 */
@mixin button-size-small() {
  font-size: map-get($button-sizes, small);
  line-height: map-get($button-sizes, small);
}

/**
 * Includes css to make a button medium
 */
@mixin button-size-medium() {
  font-size: map-get($button-sizes, medium);
  line-height: map-get($button-sizes, medium);
}

/**
 * Includes css to make a button large
 */
@mixin button-size-large() {
  font-size: map-get($button-sizes, large);
  line-height: map-get($button-sizes, large);
}

/**
 * Includes css for a button in disabled state
 * @param color $color
 * @param color $background
 */
@mixin button-disabled($color, $background) {
  cursor: not-allowed;
  color: $color;
  background-color: $background;
  box-shadow: map-get($button-shadows, disabled);
}

/**
 * Includes css for a button of type toggle
 */
@mixin button-type-toggle() {
  @include button-style($secondary-color, $asphalt);
  &:active,
  &.is-active {
    box-shadow: $paper-shadow-1;
    color: $primary-color;
  }
  &:disabled,
  &.is-disabled {
    color: $ghost;
    cursor: not-allowed;
  }
}

/**
 * Includes css for a button of type flat
 */
@mixin button-type-flat() {
  @include button-style(transparent, $primary-color);
  box-shadow: none;
  &:hover,
  &.is-hovered {
    box-shadow: $paper-shadow-2;
    background-color: $catkin;
  }
  &:active,
  &.is-active {
    box-shadow: none;
  }
}

@if $export-button-css {
  .button,
  button,
  input[type="reset"],
  input[type="button"],
  input[type="submit"] {
    @include button-base;
    @include button-style($button-background, $button-color);
    @include button-size-medium;
    &.mod-large {
      @include button-size-large;
    }
    &.mod-small {
      @include button-size-small;
    }
    &:disabled, &.is-disabled {
      @include button-disabled($button-color-disabled, $button-background-disabled);
    }
    &.mod-secondary {
      @include button-style($secondary-color, $asphalt);
    }
    &.mod-toggle {
      @include button-type-toggle;
    }
    &.mod-flat {
      @include button-type-flat;
    }
    &.mod-collapse {
      padding: 0;
    }
  }
  .file-button {
    font-weight: normal;
    display: inline-block;
    vertical-align: middle;
    input[type="file"] {
      display: none;
    }
  }
}
